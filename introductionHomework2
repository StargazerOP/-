一.瀑布模型和敏捷开发各有什么特点？
答：瀑布模型
瀑布模型核心思想是按工序将问题化简，将功能的实现与设计分开，便于分工协作，即采用结构化的分析与设计方法将逻辑实现与物理实现分开。将软件生命周期划分为制定计划、需求分析、软件设计、程序编写、软件测试和运行维护等六个基本活动，并且规定了它们自上而下、相互衔接的固定次序，如同瀑布流水，逐级下落。
瀑布模型的优缺点都十分突出：
优点明显：
·阶段清晰。从计划到开发最后到上线运行，三个阶段非常清晰。
·便于阶段内检查。为项目提供了按阶段划分的检查点
·时间顺序。每个阶段顺序必须是从上到下，严格按照时间先后进行。
·环环相扣。在每一个阶段都必须有产出物然后才能进入到下一个阶段进行。
·黑盒模式。每个阶段都有各自的角色和分工，各自只关心自己的任务。比如需求阶段开发人员无需关注。
缺点突出：
·需求隔离。由于各阶段的人员只能接触到自己工作范围内的东西，所以对客户需求的理解程度高低不等，开发人员更像被定义为流水线上的工人而非能够自主创新。
·不利于阶段间检查，各个阶段间很少有反馈。
·变更代价大。如果出现需求变更返工，付出的代价较大。
·束缚创造性。由于强调文档管理的整体性，束缚了开发人员的创造性。
·周期漫长。整个开发持续的生命周期很长，需求和设计的时间会耗费特别多，有时候会占用三分之一甚至更多时间，因此整个周期会变长，更适合需求相对稳定的大项目。
·难以适应客户客户需求的变化
敏捷开发
敏捷开发是一种以人为核心、迭代、循序渐进的开发方法。在敏捷开发中，软件项目的构建被切分成多个子项目，各个子项目的成果都经过测试，具备集成和可运行的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。
敏捷开发特点
(1)人和交互 重于过程和工具。
(2)可以工作的软件 重于求全而完备的文档。
(3)客户协作重于合同谈判。
(4)随时应对变化重于循规蹈矩。
项目的敏捷开发,敏捷开发小组主要的工作方式可以归纳为：
1.作为一个整体工作；
2.按短迭代周期工作； 
3.每次迭代交付一些成果；
4.关注业务优先级；
5.检查与调整。
最重要的不利因素恐怕是项目的规模。规模增长，面对面的沟通就愈加困难，因此敏捷方法更适用于较小的队伍，40、30、20、10人或者更少。


二.取XP实践中的两个方法，说说这两种方法的定义和使用场景。
1.现场客户 (On-site Customer)
　　定义： 要求至少有一名实际的客户代表在整个项目开发周期在现场负责确定需求、回答团队问题以及编写功能验收测试。
　　场景：现场用户可以从一定程度上解决项目团队与客户沟通不畅的问题，但是对于国内用户来讲，目前阶段还不能保证有一定技术层次的客户常驻开发现场。解决问题的方法有两种：一是可以采用在客户那里现场开发的方式；二是采用有效的沟通方式。具体表现可以是在项目合同签署前，向客户进行项目开发方法论的介绍，使得客户清楚项目开发的阶段、各个阶段要发布的成果以及需要客户提供的支持等；其次，由项目经理每周向客户汇报项目的进展情况，提供目前发布版本的位置，并提示客户系统相应的反馈与支持。
2.成对编程 (Pair Programming)
　　定义：成对编程是由两个开发人员在同一台电脑上共同编写解决同一问题的代码，通常一个人负责写编码，而另一个负责保证代码的正确性与可读性。
　　场景：一般来说，认为在项目中采用成对编程比独自编程更加有效。其实，成对编程是一种非正式的同级评审 ( Peer Review )。它要求成对编程的两个开发人员在性格和技能上应该相互匹配，目前在国内还不是十分适合推广。成对编程只是加强开发人员沟通与评审的一种方式，而非唯一的方式。具体的方式可以结合项目的情况进行。
3.计划博弈 (Planning Game)
　　定义：要求结合项目进展和技术情况，确定下一阶段要开发与发布的系统范围。
　　场景：项目的计划在建立起来以后，需要根据项目的进展来进行调整，一成不变的计划是不存在。因此，项目团队需要控制风险、预见变化，从而制定有效、可行的项目计划。
